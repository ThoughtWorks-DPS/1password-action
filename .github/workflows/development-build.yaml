# yamllint disable rule:line-length
---
name: static analysis

on:
  push:
    branches:
      - "*"
    tags:
      - "!*"

permissions: read-all
#   actions: read
#   checks: read
#   contents: read
#   deployments: read
#   discussions: read
#   issues: read
#   packages: read
#   pages: read
#   pull-requests: read
#   repository-projects: read
#   security-events: write
#   statuses: read

jobs:

  static-code-analysis:
    name: static code analysis
    permissions:
      security-events: write
    uses: ThoughtWorks-DPS/gha-tools-action/.github/workflows/static-code-analysis.yaml@main

  # - orb-tools/publish:
  #     name: publish development package
  #     context: *context
  #     orb_name: *orb-name
  #     vcs_type: << pipeline.project.type >>
  #     filters: *on-push-main
  #     requires:
  #       - orb-tools/lint
  #       - orb-tools/review
  #       - shellcheck/check
  #       - orb-tools/pack

  # - orb-tools/continue:
  #     name: Launch integration test pipeline
  #     context: *context
  #     orb_name: *orb-name
  #     config_path: .circleci/integration-test.yml
  #     pipeline_number: << pipeline.number >>
  #     vcs_type: << pipeline.project.type >>
  #     filters: *on-push-main
  #     requires:
  #       - publish development package

  # notify
  # on-success:
  #   name: deploy
  #   uses: aws-engineering-poc/shared-actions/.github/workflows/notify.yaml@main
  #   needs:
  #     - static-code-analysis
  #     - plan-pocdev-changes
  #     - apply-pocdev-changes
  #     - pocdev-smoke-tests
  #   with:
  #     message: "poc-platform-eks-core-services pocdev deployment - URL : ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
  #     sns-topic-name: "slack_notification_topic"
  #   secrets:
  #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #   if: success()

  # on-failure:
  #   name: fail
  #   uses: aws-engineering-poc/shared-actions/.github/workflows/notify.yaml@main
  #   needs:
  #     - static-code-analysis
  #     - plan-pocdev-changes
  #     - apply-pocdev-changes
  #     - pocdev-smoke-tests
  #   with:
  #     message: "Failure - poc-platform-eks-core-services pocdev deployment - URL : ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
  #     sns-topic-name: "slack_notification_topic"
  #   secrets:
  #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #   if: failure()

  #     - name: install 1Password CLI
  #       uses: 1password/install-cli-action@v1
